///************************************************
/// Generated by: PhongPN
/// Date: 09/07/2015 03:35:12
/// Goal: Create User Service Class for DM_PHONG_DAI
///************************************************
/// <summary>
/// Create User Service Class for DM_PHONG_DAI
/// </summary>

namespace BKI_QLTTQuocAnh.US
{
using BKI_QLTTQuocAnh.DS;
using IP.Core.IPCommon;
using IP.Core.IPUserService;
using System.Data.SqlClient;
using System.Data;
using System;


public class US_DM_PHONG_DAI : US_Object
{
	private const string c_TableName = "DM_PHONG_DAI";
#region "Public Properties"
	public decimal dcID 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID"] = value;
		}
	}

	public bool IsIDNull()	{
		return pm_objDR.IsNull("ID");
	}

	public void SetIDNull() {
		pm_objDR["ID"] = System.Convert.DBNull;
	}

	public decimal dcID_PHONG 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID_PHONG", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID_PHONG"] = value;
		}
	}

	public bool IsID_PHONGNull()	{
		return pm_objDR.IsNull("ID_PHONG");
	}

	public void SetID_PHONGNull() {
		pm_objDR["ID_PHONG"] = System.Convert.DBNull;
	}

	public decimal dcID_DAI 
	{
		get
		{
			return CNull.RowNVLDecimal(pm_objDR, "ID_DAI", IPConstants.c_DefaultDecimal);
		}
		set	
		{
			pm_objDR["ID_DAI"] = value;
		}
	}

	public bool IsID_DAINull()	{
		return pm_objDR.IsNull("ID_DAI");
	}

	public void SetID_DAINull() {
		pm_objDR["ID_DAI"] = System.Convert.DBNull;
	}

#endregion
#region "Init Functions"
	public US_DM_PHONG_DAI() 
	{
		pm_objDS = new DS_DM_PHONG_DAI();
		pm_strTableName = c_TableName;
		pm_objDR = pm_objDS.Tables[pm_strTableName].NewRow();
	}

	public US_DM_PHONG_DAI(DataRow i_objDR): this()
	{
		this.DataRow2Me(i_objDR);
	}

	public US_DM_PHONG_DAI(decimal i_dbID) 
	{
		pm_objDS = new DS_DM_PHONG_DAI();
		pm_strTableName = c_TableName;
		IMakeSelectCmd v_objMkCmd = new CMakeAndSelectCmd(pm_objDS, c_TableName);
		v_objMkCmd.AddCondition("ID", i_dbID, eKieuDuLieu.KieuNumber, eKieuSoSanh.Bang);
		SqlCommand v_cmdSQL;
		v_cmdSQL = v_objMkCmd.getSelectCmd();
		this.FillDatasetByCommand(pm_objDS, v_cmdSQL);
		pm_objDR = getRowClone(pm_objDS.Tables[pm_strTableName].Rows[0]);
	}
#endregion
}
}
